<?php

/* Constants */

// Where form should be displayed
define('IS_PAGE', FALSE);
define('IS_BLOCK', TRUE);

// Additional field to be passed in
define('ADD_STUDIES', 1);
define('URB_MISSIONS', 2);
define('NPO_MGMT', 3);

/**
 * Implements hook_help().
 */
function catalog_download_help($path, $arg) {
  switch($path) {
    case 'admin/help#catalog_download':
      return '<p>' . t('This module provides a form for downloading the City Vision college catalog, and a form for requesting more information about the college.') . '</p>';
  }
}

/**
 * Implements hook_menu().
 * Creates page for catalog download form.
 */
function catalog_download_menu() {
  $items = array();
 
  $items['view-catalog'] = array(
    'title' => 'Download City Vision Catalog',
    'page callback' => 'catalog_download_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_block().
 * Creates a block with the catalog download form.
 */
function catalog_download_block($op = 'list', $delta = 0, $edit = array()) {
  if($op == 'list') {
    $blocks['email_inquiry'] = array(
      'info' => t('Email Inquiry Form (Revised)'),
      'status' => 0,
    );
    $blocks['course_demo'] = array(
      'info' => t('Course Demo'),
      'status' => 0,
    );
    $blocks['addiction_studies_inquiry'] = array(
      'info' => t('Addiction Studies Inquiry'),
      'status' => 0,
    );
    $blocks['urban_missions_inquiry'] = array(
      'info' => t('Urban Missions Inquiry'),
      'status' => 0,
    );
    $blocks['npo_mgmt_inquiry'] = array(
      'info' => t('Nonprofit Management Inquiry'),
      'status' => 0,
    );
    return $blocks;
  }
  elseif($op == 'view') {
    switch($delta) {
      case 'email_inquiry':
        $block = array(
          'subject' => t('Request Additional Information'),
          'content' => drupal_get_form('catalog_download_form', IS_BLOCK),
         );
         break;
      case 'course_demo':
        $block = array(
          'subject' => t('Try a Demo Course'),
          'content' => drupal_get_form('catalog_download_course_demo_form'),
         );
         break;
      case 'addiction_studies_inquiry':
        $block = array(
          'subject' => t('Request Program Information'),
          'content' => drupal_get_form('program_inquiry_form', ADD_STUDIES),
        );
        break;
      case 'urban_missions_inquiry':
        $block = array(
           'subject' => t('Request Program Information'),
           'content' => drupal_get_form('program_inquiry_form', URB_MISSIONS),
        );
        break;
      case 'npo_mgmt_inquiry':
        $block = array(
          'subject' => t('Request Program Information'),
          'content' => drupal_get_form('program_inquiry_form', NPO_MGMT),
        );
        break;
    }
    return $block;
  }
}

/**
 * Page callback for catalog download form.
 */
function catalog_download_page() {
  $content = '';
  $content .= '<p>' . t('Learn more about City Vision College by downloading our catalog. If you would like to be added to our email list, please enter your email address.') . '</p>';
  $content .= drupal_get_form('catalog_download_form', IS_PAGE);
  $content .= '<p>' . t('You need Adobe Reader to view this catalog. You can <a href="@url">download Reader</a> for free.', array('@url' => url('http://get.adobe.com/reader'))) . '</p>';
  return $content;
}

/**
 * Catalog download form.
 */
function catalog_download_form(&$form_state, $form_context = IS_PAGE) {
  $form['email'] = array(
    '#title' => t('Email'),
    '#type' => 'textfield',
    '#size' => 20,
    '#required' => FALSE
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#attributes' => array('alt' => 'Submit', 'onclick' => "_gaq.push(['_trackPageview', '/goal/email']);"),
    '#value' => t('Download Now'),
  );
  if($form_context == IS_BLOCK) {
    $form['submit']['#value'] = t('Request More Info');
    $form['context'] = array('#type' => 'hidden', '#value' => $form_context);
  }
  else if($form_context == IS_PAGE) {
    $form['link'] = array(
      '#value' => '<p class="small-text">' . t('<a href="@url">No thanks, I\'d just like the catalog.</a>', array('@url' => url('http://www.cityvision.edu/files/catalog.pdf'))) . '</p>',
    );
    $form['context'] = array('#type' => 'hidden', '#value' => $form_context);
  }
  // Add honeypot protection.
  if(module_exists('honeypot')) {
    honeypot_add_form_protection($form, $form_state, array('honeypot'));
  }
  return $form;
}

function catalog_download_form_validate($form, &$form_state) {
  // For catalog download, removed validation as per Andrew's request
  // for compliance with DETC regulations.
  if($form_state['values']['context'] == IS_PAGE) {
    // Do nothing.
  }
  else {
    if(!valid_email_address($form_state['values']['email'])) {
      form_set_error('email', t('Please enter a valid email address.'));
    }
  }
}

function catalog_download_form_submit($form, &$form_state) {
  // Create a lead based on the email address.
  $result = catalog_download_create_lead($form_state['values']['email'], 'City Vision Email Inquiry Form');
  // If this is the catalog download page, then redirect to the catalog.
  if($form_state['values']['context'] == IS_PAGE) {
    drupal_goto('http://www.cityvision.edu/files/catalog.pdf');
  }
  // Otherwise, redirect to the full inquiry form.
  else {
    drupal_goto('request-more-info', array('tfa_Email' => $form_state['values']['email']));
  }
}

/**
 * Catalog download form.
 */
function catalog_download_course_demo_form(&$form_state) {
  $form['email'] = array(
    '#title' => t('Email Address'),
    '#type' => 'textfield',
    '#size' => 20,
    '#required' => FALSE
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  // Add honeypot protection.
  if(module_exists('honeypot')) {
    honeypot_add_form_protection($form, $form_state, array('honeypot'));
  }
  return $form;
}

function catalog_download_course_demo_form_submit($form, &$form_state) {
  // Create a lead based on the email address.
  $result = catalog_download_create_lead($form_state['values']['email'], 'City Vision College Course Demo Form');
  drupal_goto('moodle-guest-login');
}

function catalog_download_create_lead($email, $lead_form_source) {
  $lead = new stdClass();
  $lead->FirstName = 'TempFirstName';
  $lead->LastName = 'TempLastName';
  $lead->Email = $email;
  $lead->Company = 'Individual';
  $lead->Country = 'United States';
  $lead->Lead_Form_Source__c = $lead_form_source;
  $query = "SELECT Id FROM Lead WHERE Email = '" . $email . "' ORDER BY CreatedDate ASC";
  if($sf = salesforce_api_connect()) {
    try {
      $result = $sf->client->query($query);
    }
    catch (Exception $e) {
      salesforce_api_log(SALESFORCE_LOG_SOME, 'Exception in catalog_download Lead record matching: ' . $e->getMessage, array(), WATCHDOG_ALERT);
    }
  }
  // If no matching results, create the Lead.
  if($result->size == 0) {
    $result = salesforce_api_upsert(array($lead), 'Lead');
  }
  return $result;
}

/**
 * Program inquiry form.
 */
function program_inquiry_form(&$form_state, $program_type) {
  drupal_add_js(drupal_get_path('module', 'catalog_download') . '/js/catalog_download.js');
  $form['firstname'] = array(
    '#title' => t('First Name'),
    '#type' => 'textfield',
    '#size' => 20,
    '#attributes' => array('placeholder' => 'First Name'),
    '#required' => TRUE,
  );
  $form['lastname'] = array(
    '#title' => t('Last Name'),
    '#type' => 'textfield',
    '#size' => 20,
    '#attributes' => array('placeholder' => 'Last Name'),
    '#required' => TRUE,
  );
  $form['email'] = array(
    '#title' => t('Email Address'),
    '#type' => 'textfield',
    '#size' => 20,
    '#attributes' => array('placeholder' => 'Email Address'),
    '#required' => TRUE,
  );
  $form['phone'] = array(
    '#title' => t('Phone Number'),
    '#type' => 'textfield',
    '#size' => 20,
    '#attributes' => array('placeholder' => 'Phone Number'),
    '#required' => TRUE,
  );
  $form['program'] = array(
    '#type' => 'value',
    '#value' => $program_type,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  // Add honeypot protection.
  if(module_exists('honeypot')) {
    honeypot_add_form_protection($form, $form_state, array('honeypot'));
  }
  return $form;
}

function program_inquiry_form_submit($form, &$form_state) {
  // Create a lead based on the values from the inquiry form.
  $lead_form_source = '';
  $program_name = '';
  switch($form_state['values']['program']) {
    case ADD_STUDIES:
      $lead_form_source = 'City Vision College Addiction Studies Inquiry';
      $program_name = 'Addiction Studies';
      break;
    case URB_MISSIONS:
      $lead_form_source = 'City Vision College Urban Missions Inquiry';
      $program_name = 'Urban Missions';
      break;
    case NPO_MGMT:
      $lead_form_source = 'City Vision College Nonprofit Management Inquiry';
      $program_name = 'Nonprofit Management';
      break;
  }
  $result = program_inquiry_create_lead($form_state['values'], $program_name, $lead_form_source);
  drupal_goto('http://www.cityvision.edu/files/catalog.pdf');
}

function program_inquiry_create_lead($values, $program_name, $lead_form_source) {
  $lead = new stdClass();
  $lead->FirstName = $values['firstname'];
  $lead->LastName = $values['lastname'];
  $lead->Email = $values['email'];
  $lead->Phone = $values['phone'];
  $lead->Company = 'Individual';
  $lead->Country = 'United States';
  $lead->Lead_Form_Source__c = $lead_form_source;
  $lead->City_Vision_Major__c = $program_name;
  $lead->City_Vision_Program_Interest__c = 'BA/BS Degree Completion Program';
  $query = "SELECT Id FROM Lead WHERE Email = '" . $values['email'] . "' ORDER BY CreatedDate ASC";
  if($sf = salesforce_api_connect()) {
    try {
      $result = $sf->client->query($query);
    }
    catch (Exception $e) {
      salesforce_api_log(SALESFORCE_LOG_SOME, 'Exception in catalog_download Lead record matching: ' . $e->getMessage, array(), WATCHDOG_ALERT);
    }
  }
  // If no matching results, create the Lead.
  // salesforce_api_log(SALESFORCE_LOG_SOME, print_r($lead, TRUE), array(), WATCHDOG_NOTICE);
  if($result->size == 0) {
    $result = salesforce_api_upsert(array($lead), 'Lead');
    // salesforce_api_log(SALESFORCE_LOG_SOME, 'Lead with no match:' . print_r($lead, TRUE), array(), WATCHDOG_NOTICE);
  }
  // Otherwise update the earliest matching Lead.
  elseif($result->size > 0) {
    if(isset($result->records[0]->Id)) {
      $lead->Id = $result->records[0]->Id;
      $result = salesforce_api_upsert(array($lead), 'Lead');
      // salesforce_api_log(SALESFORCE_LOG_SOME, 'Lead with match: ' . print_r($lead, TRUE), array(), WATCHDOG_NOTICE);
    }
  }
  return $result;
}
